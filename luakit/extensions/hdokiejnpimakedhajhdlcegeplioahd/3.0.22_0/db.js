var g_db=null;function opendb(){try{if(getBG().g_db_transaction_tested&&!getBG().g_db_transaction_worked)return null;if(null!=g_db)return g_db;window.openDatabase?(g_db=openDatabase("lp","1.0","LastPass Local Database",2E5))||console_log("opendb: Failed to open database!"):console_log("opendb: open database is not available!")}catch(a){console_log("opendb: Caught exception while opening database: "+a.message)}return g_db}
function createDataTable(a){a&&a.transaction(function(a){a.executeSql("CREATE TABLE IF NOT EXISTS LastPassData(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, username_hash varchar(255), type varchar(20), data TEXT, CONSTRAINT usertype UNIQUE (username_hash, type))",[],function(){},function(a,b){console_log("createDataTable"+b)})})}
function createSavedLoginsTable(a){a&&(a.transaction(function(a){a.executeSql("CREATE TABLE IF NOT EXISTS LastPassSavedLogins(username varchar(255) PRIMARY KEY, password varchar(255), last_login datetime)",[],function(){},function(a,b){console_log("createSavedLoginsTable1"+b);alert("executeSQL access is broken. Safari has a bug with Private Browsing that causes this issue.  Restarting Safari typically fixes it. Error: "+b.message+"\nCode: "+b.code)})}),a.transaction(function(a){a.executeSql("CREATE TABLE IF NOT EXISTS LastPassSavedLogins2(username varchar(255) PRIMARY KEY, password text, last_login datetime, protected tinyint(1))",
[],function(){},function(a,b){console_log("createSavedLoginsTable2"+b)})}),a.transaction(function(a){a.executeSql("SELECT * FROM LastPassSavedLogins order by last_login desc",[],function(a,b){for(var c=0;c<b.rows.length;c++){var e=b.rows.item(c).username;a.executeSql("REPLACE INTO LastPassSavedLogins2 (username, password, last_login) VALUES(?, ?, ?)",[e,b.rows.item(c).password,b.rows.item(c).last_login],function(){},function(a,b){console_log(b)});a.executeSql("DELETE FROM LastPassSavedLogins",[],
function(){},function(a,b){console_log(b)})}},function(a,b){console_log("createSavedLoginsTable6"+b)})}))}
function lpSaveData(a,c){if(lpdisableoffline&&("key"==c||"accts"==c||"otp"==c))console_log("db.js : lpSaveData : returning A");else if(null==g_username||""==g_username)console_log("db.js : lpSaveData : returning B");else if(""==a&&LPISLOC&&("key"==c||"accts"==c))console_log("db.js : lpSaveData : returning C");else{var d=opendb();createDataTable(d);d?d.transaction(function(b){console_log("db.js : lpSaveData : writing data");b.executeSql("REPLACE INTO LastPassData (username_hash, type, data) VALUES (?, ?, ?)",
[db_prepend(g_username_hash),c,a],function(){console_log("db.js : lpSaveData : success")},function(a,b){console_log("db.js : lpSaveData : failed error="+b)})}):console_log("server.js : lpSaveData : returning D")}}
function createPrefsTable(a){a&&a.transaction(function(a){a.executeSql("CREATE TABLE IF NOT EXISTS LastPassPreferences (id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, username_hash varchar(255), prefname varchar(255), prefvalue varchar(255), CONSTRAINT userkey UNIQUE (username_hash, prefname))",[],function(){},function(a,b){console_log("createPrefsTable: "+b)})})}
function deletesavedpw(){var a=opendb();createSavedLoginsTable(a);a&&a.transaction(function(a){a.executeSql("UPDATE LastPassSavedLogins2 SET password = '' WHERE username = ?",[g_username],function(){g_master_password_saved=!1},function(a,b){console_log("deletesavedpw:"+b)})})}
function protect_data(a,c,d,b){a.length?c&&!g_is_win?b(a):is_chrome_portable()?b(a):(c="",(""!=a||g_is_mac)&&have_binary_function("protect_data")?call_binary_function("protect_data",a,d,function(c){"string"!=typeof c&&(c="");""==c&&(c=a);b(c)}):(""==c&&(c=a),b(c))):b(a)}
function unprotect_data(a,c,d){a.length?c&&!g_is_win?d(a):is_chrome_portable()?d(a):(c="",""!=a&&have_binary_function("unprotect_data")?call_binary_function("unprotect_data",a,function(b){"string"!=typeof b&&(b="");b==a&&(b="");d(b)}):(c==a&&(c=""),d(data_protected))):d(a)};
